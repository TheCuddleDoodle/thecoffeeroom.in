@page "/account/security"
@model Coffeeroom.Pages.Account.SecurityModel
@{
    ViewData["BodyBg"] = "bg-secondary";
    var avtrid = @HttpContext.Session.GetString("avatar") + ".png";
    var fname = @HttpContext.Session.GetString("first_name");
    ViewData["ActivePage"] = "security";
}

<form>
    @Html.AntiForgeryToken()
</form>
<hr class="d-none d-dark-mode-block">
<div class="container py-5 mt-4 mt-lg-5 mb-lg-4 my-xl-5">
    <div class="row pt-sm-2 pt-lg-0">
        <!-- Sidebar (offcanvas on sreens < 992px)-->
        @await Html.PartialAsync("_AccountSidebar")
        <!-- Page content-->
        <div class="col-lg-9 pt-4 pb-2 pb-sm-4">
            <h1 class="h2 mb-4">Security</h1>
            <!-- Basic info-->
            <section class="card border-0 py-1 p-md-2 p-xl-3 p-xxl-4 mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center pb-4 mt-sm-n1 mb-0 mb-lg-1 mb-xl-3">
                        <i class="ai-lock-closed text-primary lead pe-1 me-2"></i>
                        <h2 class="h4 mb-0">Password</h2>
                    </div>
                    <div class="row align-items-center g-3 g-sm-4 pb-3">
                        <div class="col-sm-6">
                            <label class="form-label" for="new-pass">New password</label>
                            <div class="password-toggle">
                                <input name="new_pass" type="password" id="new_pass" class="form-control bindenter2" />
                                <label class="password-toggle-btn" aria-label="Show/hide password">
                                    <input class="password-toggle-check bindenter2" type="checkbox"><span class="password-toggle-indicator"></span>
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <label class="form-label" for="confirm-pass">Confirm new password</label>
                            <div class="password-toggle">
                                <input name="confirm_pass" type="password" id="confirm_pass" class="form-control bindenter2" />
                                <label class="password-toggle-btn" aria-label="Show/hide password">
                                    <input class="password-toggle-check bindenter2" type="checkbox"><span class="password-toggle-indicator"></span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <span id="db_stat"></span>
                    <div class="d-flex justify-content-end pt-3">
                        <button class="btn btn-primary ms-3" type="button" id="savepass" onclick="save_pass()">Save Changes</button>

                    </div>
                    <div id="passstat" class="temp_stat"></div>
                </div>
            </section>


        </div>
    </div>
</div>
<!-- Divider for dark mode only-->
<hr class="d-none d-dark-mode-block">
<!-- Sidebar toggle button-->
<button class="d-lg-none btn btn-sm fs-sm btn-primary w-100 rounded-0 fixed-bottom" data-bs-toggle="offcanvas" data-bs-target="#sidebarAccount"><i class="ai-menu me-2"></i>Account menu</button>







@section jsScripts
    {
    <script>
        
        const inputBoxesPass = document.getElementsByClassName("bindenter2");
        Array.from(inputBoxesPass).forEach((inputBox) => {
            inputBox.addEventListener("keydown", function (event) {
                if (event.keyCode === 10 || event.keyCode === 13) {
                    event.preventDefault();
                    save_pass();
                }
            });
        });

       
      
        function save_pass() {
            var savePassButton = document.getElementById("savepass");
            savePassButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Saving';
            savePassButton.className = "btn btn-primary pe-none";

            var token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            var config = {
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": token
                }
            };

            var postData = {
                NewPass: document.getElementById("new_pass").value,
                ConfirmPass: document.getElementById("confirm_pass").value
            };

            axios.post("/account/security?handler=SubmitPass", postData, config)
                .then(function (response) {
                    var data = response.data;
                    savePassButton.innerHTML = "Save Changes";
                    savePassButton.className = "btn btn-primary";
                    if(data.type == "success")
                    {
                        document.getElementById("new_pass").value = "";
                        document.getElementById("confirm_pass").value = "";
                    }
                    
                    toaster(data.type, data.message);
                })
                .catch(function (error) {
                    console.error("Error:", error);
                    savePassButton.innerHTML = "Save Changes";
                    savePassButton.className = "btn btn-primary";
                    toaster("error","something went wrong");
                });
        }

    </script>
}
@page "/blog/{year}/{url}"
@model Coffeeroom.Pages.Blogs.BlogModel
@{
}

<section class="container py-5 mb-lg-4 mt-1" id="blog_intro">

    <nav aria-label="breadcrumb" class="pt-4">
        <ol class=" pb-lg-4 pb-2 pt-4 breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/blogs">Blogs</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.BlogTitle</li>
        </ol>
    </nav>

    @if (ViewData.TemplateInfo.HtmlFieldPrefix != null && ViewData.ModelState.IsValid)
    {
        try
        {
            <div class="row">
                <div class="col-lg-9 col-xl-8 pe-lg-4 pe-xl-0">
                    <h1 class="pb-2 pb-lg-3">Top 5 K-dramas to binge this summer</h1>
                    <div class="d-flex flex-wrap align-items-center justify-content-between border-bottom mb-4">
                        <div class="d-flex align-items-center mb-4 me-4"><span class="fs-sm me-2">By:</span><span class=" position-relative fw-semibold p-0"><span id="authorsPlaceholder2"></span></span></div>
                        <div class="d-flex align-items-center mb-4">
                            <button type="button" id="shareButton" class="fs-sm me-2 btn btn-sm btn-outline-secondary rounded-pill"><i class="ai-share"></i></button>
                        </div>
                    </div>
                    @await Html.PartialAsync("ContentViews/Blogs/" + @Model.YearPosted + "/" + @Model.UrlHandle + "/blog_content")
                </div>
                @await Html.PartialAsync("ContentViews/Blogs/" + @Model.YearPosted + "/" + @Model.UrlHandle + "/SideBar")
            </div>

        }
        catch
        {
            // Response.Redirect("/site/404");
            @await Html.PartialAsync("_404")
        }
        ViewData["blogurl"] = @Model.UrlHandle;
    }
    else
    {
        ViewData["blogurl"] = "";
        @await Html.PartialAsync("_404")
    }

    @Html.AntiForgeryToken();
    <div class="modal fade" id="mdlDelete" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Do you want to delete your comment?</p>
                </div>
                <div class="modal-footer flex-column flex-sm-row">
                    <button type="button" class="btn ripple btn-secondary w-100 w-sm-auto mb-sm-0"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" onclick="cmntDeleteConfirm()"
                            class="btn btn-danger ripple w-100 w-sm-auto ms-sm-3">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="mdlreplyDelete" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Do you want to delete your reply?</p>
                </div>
                <div class="modal-footer flex-column flex-sm-row">
                    <button type="button" class="btn ripple btn-secondary w-100 w-sm-auto mb-sm-0"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" onclick="replyDeleteConfirm()"
                            class="btn btn-danger ripple w-100 w-sm-auto ms-sm-3">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="mdlEdit" tabindex="-1" role="dialog">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        <textarea class="form-control" rows="4" id="blog_commentEdit"
                                  placeholder="Type your comment here...(markups can be used and will be rendered as it is)"
                                  required=""></textarea>
                    </p>
                </div>
                <div class="modal-footer flex-column flex-sm-row">
                    <button type="button" class="btn ripple btn-secondary w-100 w-sm-auto mb-sm-0"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" onclick="cmntEditSave()"
                            class="btn btn-primary ripple w-100 w-sm-auto ms-sm-3">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="mdlReply" tabindex="-1" role="dialog">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        <textarea class="form-control" rows="4" id="blog_replyEdit"
                                  placeholder="Type your reply here..."></textarea>
                    </p>
                </div>
                <div class="modal-footer flex-column flex-sm-row">
                    <button type="button" class="btn btn-secondary ripple w-100 w-sm-auto mb-sm-0"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" onclick="replyEditSave()"
                            class="btn btn-primary ripple w-100 w-sm-auto ms-sm-3">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="mdladdReply" tabindex="-1" role="dialog">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Reply</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        <textarea class="form-control" rows="4" id="addReplybox"
                                  placeholder="Type your reply here..."></textarea>
                        <input id="addReplyboxid" style="display:none" value="" />
                    </p>
                </div>
                <div class="modal-footer flex-column flex-sm-row">
                    <button type="button" class="btn btn-secondary ripple w-100 w-sm-auto mb-sm-0" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" onclick="replAdd()" class="btn ripple btn-primary w-100 w-sm-auto ms-sm-3">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Comments-->

    <div class="pt-4 pt-xl-5 mt-4" id="blog_comments">

        <div class="border-top border-bottom">
            <!-- Comments collapse-->
            <hr />
            <div class="collapse" id="commentsCollapse">
                <div id="comments"></div>
            </div>
            <div class="nav">
                <button class="btn-more nav-link collapsed w-100 justify-content-center p-3" type="button"
                        data-bs-toggle="collapse" data-bs-target="#commentsCollapse" aria-expanded="false"
                        aria-controls="commentsCollapse" data-show-label="Show all comments"
                        data-hide-label="Hide all comments">
                    <span class="fw-normal opacity-70 ms-1">
                        (<span id="blogcount">@Model.commentscounter</span>)
                    </span>
                </button>
            </div>

            <!-- Comment form-->

        </div>
    </div>
</section>

<section class="container pt-5 mt-5">
    <div class="card border-0 bg-secondary pt-2 pb-2 mt-2 p-md-2 p-xl-3 p-xxl-4 mt-n3 mt-md-0">
        <div class="card-body">
            @{
                string role;
                try
                {

                    role = HttpContext.Session.GetString("role");
                }
                catch
                {
                    role = "guest";
                }

            }
            @if (role != null)
            {
                if (role != null && (role == "user" || role == "admin"))
                {
                    <h2 class="pb-2 pb-lg-3 pb-xl-4">Leave a comment</h2>
                    <div class="row needs-validation g-4" novalidate>
                        <div class="col-12">
                            <label class="form-label" for="c-comment">Comment</label>
                            <textarea class="form-control" rows="4" id="blog_comment" placeholder="Type your comment here..."
                                      required></textarea>
                            <div class="invalid-feedback">Please enter a comment message!</div>
                        </div>
                        <div class="col-12">
                            <button class="btn btn-primary" id="commentbutton" type="button" onclick="addcomment()">
                                Post
                                Comment
                            </button>
                        </div>
                    </div>
                    <span id="commentstat"></span>
                }
                else
                {
                    <span><a style="text-decoration:none" href="/account/login">login</a> to comment</span>
                }
            }
            else
            {
                <span><a style="text-decoration:none" href="/account/login">login</a> to comment</span>
            }
        </div>
    </div>
</section>

<button class="d-lg-none btn btn-sm fs-sm btn-primary w-100 rounded-0 fixed-bottom" data-bs-toggle="offcanvas"
        data-bs-target="#sidebar">
    <i class="ai-layout-column me-2"></i>Sidebar @ViewData["username"]
</button>

@section jsScripts
    {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js" integrity="sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    @*@await Html.PartialAsync("Scripts/Development/_Blog")*@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadImages();
            loadComments();
            loadAuthors();
            loadTags();
            //setTimeout(load_images, 20);
            //setTimeout(load_comments, 1000);
        });
        async function loadComments() {
        @{
            if (HttpContext.Session.GetString("role") != null && HttpContext.Session.GetString("role") != "" && HttpContext.Session.GetString("role") != "guest")
            {
                ViewData["BlogRole"] = HttpContext.Session.GetString("role").ToString();
            }
            else
            {
                ViewData["BlogRole"] = "guest";
            }
        }

                            var roleData = "@ViewData["BlogRole"]";
            $.ajax({
                type: 'POST',
                url: '/blog/@Model.YearPosted/@Model.UrlHandle?handler=LdComments',
                success: function (response) {
                    const data = JSON.parse(response);
                    data.sort((a, b) => a.id - b.id);
                    let commentsHTML = "";
                    for (let i = 0; i < data.length; i++) {
                        const comment = data[i];
                        var c = i + 1;
                        commentsHTML += '<div class="border-bottom py-4 mt-2 mb-4">' +
                            '<div class="d-flex align-items-center pb-1 mb-3"> <img class="rounded-circle" src="/assets/images/avatars/default/' + comment.avatar + '.png" width="48" alt="Comment author">' +
                            '<div class="ps-3">' +
                            '<h6 class="mb-0">' + comment.fullname + ' </h6><span class="fs-sm text-muted">' + comment.date + '</span>' +
                            '</div>' +
                            '</div>' +
                            '<div class="btn-group-sm me-2 ml-2 mx-2" style="float:right;" role="group" aria-label="Settings group">' +
                            (roleData !== 'guest' ? '<button type="button" id="repl_' + comment.id + '" onclick="cmntReply(' + comment.id + ')" class="btn btn-secondary btn-icon px-2"><i class="ai-redo"></i></button>&nbsp;' : '') +
                            (comment.edit ? '<button type="button" id="edt_' + comment.id + '" onclick="cmntEdit(' + comment.id + ')" class="btn btn-secondary btn-icon px-2"><i class="ai-edit"></i></button>&nbsp;' : '') +
                            (comment.edit ? '<button type="button" id="dlt_' + comment.id + '" onclick="cmntDelete(' + comment.id + ')" class="btn btn-secondary btn-icon px-2"><i class="ai-trash"></i></button>&nbsp;' : '') +
                            '</div>' +
                            '<span class="pb-2 mb-0" id="cm_' + comment.id + '">' + comment.comment + '</span>';

                        if (comment.replies && comment.replies.length > 0) {
                            comment.replies.sort((a, b) => a.replyId - b.replyId);
                            for (let j = 0; j < comment.replies.length; j++) {
                                const reply = comment.replies[j];
                                //commentsHTML +=
                                //    `<div class="card card-body border-0 bg-secondary mt-4">`+
                                //                `<div class="d-flex align-items-center pb-1 mb-3">`+
                                //                    `<img class="rounded-circle" src="/assets/images/avatars/default/${reply.replyAvatar}.png" width="48" alt="Comment author">`+
                                //    `<div class="ps-3" > `+
                                //    `<h6 class="mb-0">${reply.replyFullName}</h6><span class="fs-sm text-muted">${reply.replyDate}</span>` +
                                //       `</div></div>`+
                                //        `<div class="d-flex align-items-center justify-content-between mb-3" role = "group" aria - label="Settings group" > `+
                                //        `<p class="mb-0"><a class="fw-bold text-decoration-none" href="#">@@${comment.fullname}</a>&nbsp;&nbsp;<span id="reply_${reply.replyId}">${reply.replyComment}</span></p>` +
                                //            `<div>`+
                                //             `${reply.replyEdit ? `<button type="button" id="edt${reply.replyId}" onclick="replyEdit(${reply.replyId})" class="btn btn-sm btn-secondary btn-icon px-2"><i class="ai-edit"></i></button>&nbsp;` : ''}` +
                                //                         `${reply.replyEdit ? `<button type="button" id="repldlt_${reply.replyId}" onclick="replyDelete(${reply.replyId})" class="btn btn-sm btn-secondary btn-icon px-2"><i class="ai-trash"></i></button>&nbsp;` : ''}`+
                                //            `</div>`+
                                //        `</div>`+
                                //        `</div> `;
                                commentsHTML +=
                                    '<div class="card card-body border-0 bg-secondary mt-4">' +
                                    '    <div class="d-flex align-items-center pb-1 mb-3">' +
                                    '        <img class="rounded-circle" src="/assets/images/avatars/default/' + reply.replyAvatar + '.png" width="48" alt="Comment author">' +
                                    '        <div class="ps-3">' +
                                    '            <h6 class="mb-0">' + reply.replyFullName + '</h6><span class="fs-sm text-muted">' + reply.replyDate + '</span>' +
                                    '        </div>' +
                                    '    </div>' +
                                    '    <div class="d-flex align-items-center justify-content-between mb-3" role="group" aria-label="Settings group">' +
                                    '        <p class="mb-0"><a class="fw-bold text-decoration-none" href="#">@@' + comment.fullname + '</a>&nbsp;&nbsp;<span id="reply_' + reply.replyId + '">' + reply.replyComment + '</span></p>' +
                                    '        <div>' +
                                    (reply.replyEdit ? '            <button type="button" id="edt' + reply.replyId + '" onclick="replyEdit(' + reply.replyId + ')" class="btn btn-sm btn-secondary btn-icon px-2"><i class="ai-edit"></i></button>&nbsp;' : '') +
                                    (reply.replyEdit ? '            <button type="button" id="repldlt_' + reply.replyId + '" onclick="replyDelete(' + reply.replyId + ')" class="btn btn-sm btn-secondary btn-icon px-2"><i class="ai-trash"></i></button>&nbsp;' : '') +
                                    '        </div>' +
                                    '    </div>' +
                                    '</div>';

                            }
                        }
                        commentsHTML += `</div>`;
                    }

                    document.getElementById("comments").innerHTML = commentsHTML;
                    document.getElementById("blogcount").innerHTML = c;


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error:', errorThrown);
                }
            });



        }

        async function loadImages() {
            const elements = document.querySelectorAll('.img_placeholder');
            elements.forEach(element => {
                const originalString = element.getAttribute("src");
                const modifiedString = originalString.replace(new RegExp("_placeholder", 'g'), '');
                element.setAttribute("src", modifiedString);
            });
        }

        function addcomment() {
            $("#commentbutton").html(' <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>posting.. ');
            $("#commentbutton").attr("class", "btn btn-primary pe-none");
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                type: "POST",
                url: "/blog/@Model.YearPosted/@Model.UrlHandle?handler=AddComment", contentType: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    BlogUrl: "@ViewData["blogurl"]",
                    Comment: $("#blog_comment").val()
                }),
                success: function (data) {
                    $("#commentbutton").html('Post Comment');
                    $("#commentbutton").attr("class", "btn btn-primary");
                    $("#commentstat").html("<div class=\"subscription-status mx-auto status-" + data.type + "\">" + data.message + "</div>");
                    if (data.type == "success") {
                        loadComments();
                        document.getElementById("blog_comment").value = "";
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Error:", errorThrown.e);
                    $("#commentbutton").html('Post Comment');
                    $("#commentbutton").attr("class", "btn btn-primary");
                    $("#commentstat").html("<div class=\"subscription-status mx-auto status-error\">connection issue..</div>");
                }
            });
            startTimeout();
        }

        let timeoutmail;
        function startTimeout() {
            clearTimeout(timeoutmail);
            timeoutmail = setTimeout(() => {
                document.getElementById("commentstat").innerHTML = "";
            }, 5000);
        }

        async function loadAuthors() {
            axios.get('/blog/@Model.YearPosted/@Model.UrlHandle?handler=LoadAuthors&blogId=' + @Model.BlogId)
                .then(response => {
                    const data = JSON.parse(response.data);
                    var authorsdat = "";
                    var authorsdat2 = "";
                    if (data.length != 0) {
                        for (var i = 0; i < data.length; i++) {

                            authorsdat2 = authorsdat2 + data[i].firstName + ' , ';
                        }
                        document.getElementById('authorsPlaceholder2').innerHTML = authorsdat2.slice(0, authorsdat2.lastIndexOf(',')) + authorsdat2.slice(authorsdat2.lastIndexOf(',') + 1);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('authorsPlaceholder2').innerHTML = "unable to fetch authors' data";
                });

        }

        function cmntEdit(id) {
            localStorage.removeItem("editid");
            localStorage.setItem('editid', id);
            const v = localStorage.getItem('editid');
            $('#mdlEdit').modal('show');
            var cmntid = "cm_" + id;
            var p = document.getElementById(cmntid).innerHTML;
            document.getElementById("blog_commentEdit").value = p;
            if (p == "" || p == null) {
                document.getElementById("blog_commentEdit").value = p;
                alert("entity");
            }
        }

        function replyEdit(id) {
            localStorage.removeItem("replyid");
            localStorage.setItem('replyid', id);
            const v = localStorage.getItem('replyid');
            $('#mdlReply').modal('show');
            var replid = "reply_" + id;
            var p = document.getElementById(replid).innerHTML;
            document.getElementById("blog_replyEdit").value = p;
            if (p == "" || p == null) {
                document.getElementById("blog_replyEdit").value = p;
                alert("entity");
            }
        }

        function cmntEditSave() {
            $.ajax({
                url: '/blog/@Model.YearPosted/@Model.UrlHandle?handler=CommentsEdit',
                type: 'POST',
                data: {
                    id: localStorage.getItem('editid'),
                    comment: $("#blog_commentEdit").val()
                },
                success: function (data) {
                    loadComments();
                    $('#mdlEdit').modal('hide');
                    $("#blog_commentEdit").val() == "";
                    localStorage.removeItem("editid");
                },
                error: function () {
                    alert("something went wrong");
                }
            });

        }

        function replyEditSave() {
            $.ajax({
                url: '/blog/@Model.YearPosted/@Model.UrlHandle?handler=ReplyEdit',
                type: 'POST',
                data: {
                    id: localStorage.getItem('replyid'),
                    reply: $("#blog_replyEdit").val()
                },
                success: function (data) {
                    loadComments();
                    $('#mdlReply').modal('hide');
                    $("#blog_replyEdit").val() == "";
                    localStorage.removeItem("replyid");
                },
                error: function () {
                    alert("something went wrong");
                }
            });

        }

        function cmntDelete(id) {
            localStorage.setItem('delid', id);
            const v = localStorage.getItem('delid');
            $('#mdlDelete').modal('show');
        }

        function cmntDeleteConfirm() {
            $.ajax({
                url: '/blog/@Model.YearPosted/@Model.UrlHandle?handler=OnDelete&id=' + localStorage.getItem('delid') + '&type=comment',
                type: 'DELETE',
                success: function (data) {
                    loadComments();
                },
                error: function () {
                    alert("something went wrong");
                }
            });
            $('#mdlDelete').modal('hide');
            localStorage.removeItem('delid');
        }



        function cmntReply(id) {
            localStorage.setItem('replyto', id);
            const v = localStorage.getItem('replyto');
            document.getElementById("addReplybox").value = "";
            $('#mdladdReply').modal('show');
        }

        function replAdd() {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                type: "POST",
                url: "/blog/@Model.YearPosted/@Model.UrlHandle?handler=AddReply", contentType: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    BlogUrl: "@ViewData["blogurl"]",
                    ReplyText: $("#addReplybox").val(),
                    CommentId: localStorage.getItem('replyto')
                }),
                success: function (data) {
                    if (data.type == "success") {
                        loadComments();
                        $('#mdladdReply').modal('hide');
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Error:", errorThrown.e);
                }
            });

        }

        function replyDelete(id) {
            localStorage.setItem('delid', id);
            const v = localStorage.getItem('delid');
            $('#mdlreplyDelete').modal('show');
        }

        function replyDeleteConfirm() {
            $.ajax({
                url: '/blog/@Model.YearPosted/@Model.UrlHandle?handler=OnDelete&id=' + localStorage.getItem('delid') + '&type=reply',
                type: 'z',
                success: function (data) {
                    loadComments();
                },
                error: function () {
                    alert("something went wrong");
                }
            });
            $('#mdlreplyDelete').modal('hide');
            localStorage.removeItem('delid');
        }

        function loadTags() {
            var input = '@Model.BlogTags';
            var parts = input.split(',');
            var tags = "";
            parts.forEach(function (part) {
                var words = part.split(' ');
                for (var i = 0; i < words.length; i++) {
                    tags = tags + `<a class="btn btn-outline-secondary rounded-pill mt-3 ms-3" href="/blogs/tag/${words[i]}">${words[i]}</a>`;
                }
            });
            document.getElementById('tagsPlaceholder').innerHTML = tags;

        }


    </script>

}
